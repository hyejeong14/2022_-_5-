현재까지 진행사항
- 구글 리뷰 최신순 930개 스크래핑 -> 이름,별점,리뷰내용,날짜 CSV 파일로 저장 
- csv 파일에서 이모티콘, 특수문자, 영어를 제외한 언어, 한국어가 포함된 리뷰 제거
- google_review_csv => csv파일 처리하는 코드

-트립어드바이저 최신순 스크래핑

요구사항

-토픽모델링
-결과 시각화




** 공부하넌즁 ''''
<감성분석>
1. 지도학습에 기반한 감성분석
- LogisticRegression, CNN,BERT 등
- BERT가 보통 모델의 성능이 가장 좋음

2. 비지도학습에 기반한 감성분석
- 감성어휘 사전을 이용한 감성분석
- ex) SentiWordNet, VADER
- VADER : 계산된 감성 지수 값이 임계값 보다 높으면 긍정, 낮으면 부정으로 판단

=> 모델을 통해 문장이 긍정인지 부정인지 판단 -> "왜" 긍정,부정인지 판단이 안됨 (?)

<토픽모델링>
: 단어가 특정 토픽에 포함될 확률을 파악, 문서의 주제를 추정

1. LDA 모델
- 문서별 단어 분포를 가지고 행렬을 만들어 베이즈 추론을 이용. 
  문서별 토픽 분포, 토픽별 단어 분포를 알아냄
- 비지도 학습 알고리즘, 단어들 간 관련성에 따라 토픽별로 분류하는 확률적 알고리즘
- 혼잡도를 계산하여 토픽의 개수 K 값 결정 or 토픽 사이의 거리를 계산 or 혼잡도와 교차검증 사용
- Joint Sentiment/Topic Model(JST) : 감성분류와 토픽 추출 동시에 진행


=> 위의 감성분석은 문서수준, 문장수준의 감성분석이고 토픽수준의 감성분석을 진행해야함
=> 문서의 문장을 기반으로 명사를 추출하여 토픽을 선정하고,
     이 토픽에 따라 감성사전을 이용하여 감성분석을 진행 
=> 리뷰데이터 내에 숨어있는 주제를 추출, 동일 주제에 대해 고객들의 심리 동향 탐색
=> 전체 고객 리뷰를 통합하여 추출한 토픽에 대해 전체적으로 어떤 감성인지 연구



토픽모델링 감성분석 과정

1. 데이터 수집과 전처리
- 트립어드바이저, 구글 리뷰 크롤링
- 결측치, 불용어 제거, 소문자 변환 등 전처리 과정

2. 토픽별 문장 DB 구축
- 혼잡도와 교차검증을 사용하여 토픽의 개수 결정
- 수집한 전체 리뷰 데이터를 대상으로 LDA를 이용하여 토픽 추출
- 추출된 키워드들의 전체적인 의미를 기반으로 분류된 토픽에 대해 해석
- 관광지 속성과 토픽을 대응시켜 최종 키워드 결정
- 토픽별 추출된 키워드를 포함한 문장 찾기 - LDA를 이용해 토픽과 관련된 빈도가 높은 키워드 찾기

3. 토픽별 감성값 계산 및 검증
- 키워드가 포함된 문장들 감성분석 진행 ( 문장의 감성값 계산 )
- 리뷰를 문장별로 나누기 -> 토픽별 키워드를 포함한 문장을 분류 키워드별로 분류 -> 감성분석
- 위의 과정을 반복하다 보면 토픽별 감성분석 결과를 얻을 수 있음